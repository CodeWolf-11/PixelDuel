// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int       @id @default(autoincrement())
  name                 String    @db.VarChar(191)
  email                String    @unique
  password             String
  password_reset_token String?
  token_send_at        DateTime?
  email_verified_at    DateTime?
  email_verify_token   String?
  created_at           DateTime  @default(now())
  Duel                 Duel[]
}

model Duel {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  image        String
  userId       Int
  created_at   DateTime      @default(now())
  expire_at    DateTime
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  DuelItem     DuelItem[]
  ClashComment DuelComment[]
}

model DuelItem {
  id         Int      @id @default(autoincrement())
  duelId     Int
  duel       Duel     @relation(fields: [duelId], references: [id], onDelete: Cascade)
  image      String
  count      Int      @default(0)
  created_at DateTime @default(now())
}

model DuelComment {
  id         Int      @id @default(autoincrement())
  duel       Duel     @relation(fields: [duelId], references: [id], onDelete: Cascade)
  duelId     Int
  comment    String
  created_at DateTime @default(now())
}
